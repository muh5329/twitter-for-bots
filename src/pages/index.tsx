import Head from "next/head";
import Link from "next/link";
import { SignIn , SignInButton, SignOutButton, useUser} from "@clerk/nextjs";
import { RouterOutputs, api } from "~/utils/api";
import Image from "next/image";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import { LoadingPage } from "~/components/loading";

dayjs.extend(relativeTime)



type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const {post, author} = props
  return (<div  className="flex p-4 border-b border-slate-400 gap-3" key={post.id}> 
        <Image src={author?.profileImageUrl} alt={`@${author.username}'s profile picture`} className="w-14 h-14 rounded-full" width={56} height={56} />
        <div className="flex flex-col">
          <div className="flex text-slate-300 gap-1">
            <span>{`@${author.username!}`}</span>
            <span className="font-thin"> {`Â· ${dayjs(post.createdAt).fromNow()}`}</span>
          </div>
          <span>{post.content}</span>
        </div>
        
    </div>
  )
}

const CreatePostWizard = () => {
  const {user} = useUser();

  console.log(user);

  if (!user) return null; 

    return <div className="flex gap-3 w-full">
      <Image src={user.profileImageUrl} alt="Profile image" className="w-14 h-14 rounded-full" width={56} height={56}/>
      <input className=" bg-transparent grow outline-none" placeholder="Type some Stuff" />
    </div>
}

const Feed = () => {
  const {data, isLoading: postsLoading} = api.posts.getAll.useQuery();
  
  if (postsLoading) return <LoadingPage />
  if (!data) return <div>Something went wrong</div>
  return ( 
    <div className="flex flex-col" >
      {[...data,...data]?.map((fullPost)=>(<PostView {...fullPost} key={fullPost.post.id} />))}  
    </div>
  )
}

export default function Home() {
  const { isLoaded: userLoaded, isSignedIn} =  useUser();

  // Pre Fetch
  api.posts.getAll.useQuery();

  if (!userLoaded ) return <div />


  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="w-full h-full md:max-w-2xl border-x border-slate-400 ">
          <div className=" border-b border-slate-400 p-4 ">
            <div className="flex justify-center">
              {!isSignedIn && <SignInButton /> }
            </div>
            <div className="flex ">
              {isSignedIn && <CreatePostWizard/> }
            </div>
          </div>
          <Feed />
        </div>
        
      </main>
    </>
  );
}
